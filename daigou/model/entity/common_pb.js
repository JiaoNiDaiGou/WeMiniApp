/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.jiaonidaigou.appengine.wiremodel.entity.Address', null, global);
goog.exportSymbol('proto.jiaonidaigou.appengine.wiremodel.entity.PhoneNumber', null, global);
goog.exportSymbol('proto.jiaonidaigou.appengine.wiremodel.entity.Postman', null, global);
goog.exportSymbol('proto.jiaonidaigou.appengine.wiremodel.entity.Price', null, global);
goog.exportSymbol('proto.jiaonidaigou.appengine.wiremodel.entity.Price.Unit', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jiaonidaigou.appengine.wiremodel.entity.Address = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.jiaonidaigou.appengine.wiremodel.entity.Address, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.jiaonidaigou.appengine.wiremodel.entity.Address.displayName = 'proto.jiaonidaigou.appengine.wiremodel.entity.Address';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jiaonidaigou.appengine.wiremodel.entity.Address.prototype.toObject = function(opt_includeInstance) {
  return proto.jiaonidaigou.appengine.wiremodel.entity.Address.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jiaonidaigou.appengine.wiremodel.entity.Address} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jiaonidaigou.appengine.wiremodel.entity.Address.toObject = function(includeInstance, msg) {
  var f, obj = {
    countryCode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    region: jspb.Message.getFieldWithDefault(msg, 2, ""),
    city: jspb.Message.getFieldWithDefault(msg, 3, ""),
    zone: jspb.Message.getFieldWithDefault(msg, 4, ""),
    address: jspb.Message.getFieldWithDefault(msg, 5, ""),
    postalCode: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jiaonidaigou.appengine.wiremodel.entity.Address}
 */
proto.jiaonidaigou.appengine.wiremodel.entity.Address.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jiaonidaigou.appengine.wiremodel.entity.Address;
  return proto.jiaonidaigou.appengine.wiremodel.entity.Address.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jiaonidaigou.appengine.wiremodel.entity.Address} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jiaonidaigou.appengine.wiremodel.entity.Address}
 */
proto.jiaonidaigou.appengine.wiremodel.entity.Address.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setZone(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPostalCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jiaonidaigou.appengine.wiremodel.entity.Address.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jiaonidaigou.appengine.wiremodel.entity.Address.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jiaonidaigou.appengine.wiremodel.entity.Address} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jiaonidaigou.appengine.wiremodel.entity.Address.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountryCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getZone();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPostalCode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string country_code = 1;
 * @return {string}
 */
proto.jiaonidaigou.appengine.wiremodel.entity.Address.prototype.getCountryCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.jiaonidaigou.appengine.wiremodel.entity.Address.prototype.setCountryCode = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string region = 2;
 * @return {string}
 */
proto.jiaonidaigou.appengine.wiremodel.entity.Address.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.jiaonidaigou.appengine.wiremodel.entity.Address.prototype.setRegion = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string city = 3;
 * @return {string}
 */
proto.jiaonidaigou.appengine.wiremodel.entity.Address.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.jiaonidaigou.appengine.wiremodel.entity.Address.prototype.setCity = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string zone = 4;
 * @return {string}
 */
proto.jiaonidaigou.appengine.wiremodel.entity.Address.prototype.getZone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.jiaonidaigou.appengine.wiremodel.entity.Address.prototype.setZone = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string address = 5;
 * @return {string}
 */
proto.jiaonidaigou.appengine.wiremodel.entity.Address.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.jiaonidaigou.appengine.wiremodel.entity.Address.prototype.setAddress = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string postal_code = 6;
 * @return {string}
 */
proto.jiaonidaigou.appengine.wiremodel.entity.Address.prototype.getPostalCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.jiaonidaigou.appengine.wiremodel.entity.Address.prototype.setPostalCode = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jiaonidaigou.appengine.wiremodel.entity.PhoneNumber = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.jiaonidaigou.appengine.wiremodel.entity.PhoneNumber, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.jiaonidaigou.appengine.wiremodel.entity.PhoneNumber.displayName = 'proto.jiaonidaigou.appengine.wiremodel.entity.PhoneNumber';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jiaonidaigou.appengine.wiremodel.entity.PhoneNumber.prototype.toObject = function(opt_includeInstance) {
  return proto.jiaonidaigou.appengine.wiremodel.entity.PhoneNumber.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jiaonidaigou.appengine.wiremodel.entity.PhoneNumber} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jiaonidaigou.appengine.wiremodel.entity.PhoneNumber.toObject = function(includeInstance, msg) {
  var f, obj = {
    countryCode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    phone: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jiaonidaigou.appengine.wiremodel.entity.PhoneNumber}
 */
proto.jiaonidaigou.appengine.wiremodel.entity.PhoneNumber.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jiaonidaigou.appengine.wiremodel.entity.PhoneNumber;
  return proto.jiaonidaigou.appengine.wiremodel.entity.PhoneNumber.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jiaonidaigou.appengine.wiremodel.entity.PhoneNumber} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jiaonidaigou.appengine.wiremodel.entity.PhoneNumber}
 */
proto.jiaonidaigou.appengine.wiremodel.entity.PhoneNumber.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jiaonidaigou.appengine.wiremodel.entity.PhoneNumber.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jiaonidaigou.appengine.wiremodel.entity.PhoneNumber.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jiaonidaigou.appengine.wiremodel.entity.PhoneNumber} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jiaonidaigou.appengine.wiremodel.entity.PhoneNumber.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountryCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string country_code = 1;
 * @return {string}
 */
proto.jiaonidaigou.appengine.wiremodel.entity.PhoneNumber.prototype.getCountryCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.jiaonidaigou.appengine.wiremodel.entity.PhoneNumber.prototype.setCountryCode = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string phone = 2;
 * @return {string}
 */
proto.jiaonidaigou.appengine.wiremodel.entity.PhoneNumber.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.jiaonidaigou.appengine.wiremodel.entity.PhoneNumber.prototype.setPhone = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jiaonidaigou.appengine.wiremodel.entity.Price = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.jiaonidaigou.appengine.wiremodel.entity.Price, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.jiaonidaigou.appengine.wiremodel.entity.Price.displayName = 'proto.jiaonidaigou.appengine.wiremodel.entity.Price';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jiaonidaigou.appengine.wiremodel.entity.Price.prototype.toObject = function(opt_includeInstance) {
  return proto.jiaonidaigou.appengine.wiremodel.entity.Price.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jiaonidaigou.appengine.wiremodel.entity.Price} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jiaonidaigou.appengine.wiremodel.entity.Price.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    unit: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jiaonidaigou.appengine.wiremodel.entity.Price}
 */
proto.jiaonidaigou.appengine.wiremodel.entity.Price.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jiaonidaigou.appengine.wiremodel.entity.Price;
  return proto.jiaonidaigou.appengine.wiremodel.entity.Price.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jiaonidaigou.appengine.wiremodel.entity.Price} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jiaonidaigou.appengine.wiremodel.entity.Price}
 */
proto.jiaonidaigou.appengine.wiremodel.entity.Price.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setValue(value);
      break;
    case 2:
      var value = /** @type {!proto.jiaonidaigou.appengine.wiremodel.entity.Price.Unit} */ (reader.readEnum());
      msg.setUnit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jiaonidaigou.appengine.wiremodel.entity.Price.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jiaonidaigou.appengine.wiremodel.entity.Price.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jiaonidaigou.appengine.wiremodel.entity.Price} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jiaonidaigou.appengine.wiremodel.entity.Price.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getUnit();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.jiaonidaigou.appengine.wiremodel.entity.Price.Unit = {
  USD: 0,
  RMB: 1
};

/**
 * optional double value = 1;
 * @return {number}
 */
proto.jiaonidaigou.appengine.wiremodel.entity.Price.prototype.getValue = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.jiaonidaigou.appengine.wiremodel.entity.Price.prototype.setValue = function(value) {
  jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional Unit unit = 2;
 * @return {!proto.jiaonidaigou.appengine.wiremodel.entity.Price.Unit}
 */
proto.jiaonidaigou.appengine.wiremodel.entity.Price.prototype.getUnit = function() {
  return /** @type {!proto.jiaonidaigou.appengine.wiremodel.entity.Price.Unit} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.jiaonidaigou.appengine.wiremodel.entity.Price.Unit} value */
proto.jiaonidaigou.appengine.wiremodel.entity.Price.prototype.setUnit = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jiaonidaigou.appengine.wiremodel.entity.Postman = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.jiaonidaigou.appengine.wiremodel.entity.Postman, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.jiaonidaigou.appengine.wiremodel.entity.Postman.displayName = 'proto.jiaonidaigou.appengine.wiremodel.entity.Postman';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jiaonidaigou.appengine.wiremodel.entity.Postman.prototype.toObject = function(opt_includeInstance) {
  return proto.jiaonidaigou.appengine.wiremodel.entity.Postman.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jiaonidaigou.appengine.wiremodel.entity.Postman} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jiaonidaigou.appengine.wiremodel.entity.Postman.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    phone: (f = msg.getPhone()) && proto.jiaonidaigou.appengine.wiremodel.entity.PhoneNumber.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jiaonidaigou.appengine.wiremodel.entity.Postman}
 */
proto.jiaonidaigou.appengine.wiremodel.entity.Postman.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jiaonidaigou.appengine.wiremodel.entity.Postman;
  return proto.jiaonidaigou.appengine.wiremodel.entity.Postman.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jiaonidaigou.appengine.wiremodel.entity.Postman} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jiaonidaigou.appengine.wiremodel.entity.Postman}
 */
proto.jiaonidaigou.appengine.wiremodel.entity.Postman.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new proto.jiaonidaigou.appengine.wiremodel.entity.PhoneNumber;
      reader.readMessage(value,proto.jiaonidaigou.appengine.wiremodel.entity.PhoneNumber.deserializeBinaryFromReader);
      msg.setPhone(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jiaonidaigou.appengine.wiremodel.entity.Postman.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jiaonidaigou.appengine.wiremodel.entity.Postman.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jiaonidaigou.appengine.wiremodel.entity.Postman} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jiaonidaigou.appengine.wiremodel.entity.Postman.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPhone();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.jiaonidaigou.appengine.wiremodel.entity.PhoneNumber.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.jiaonidaigou.appengine.wiremodel.entity.Postman.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.jiaonidaigou.appengine.wiremodel.entity.Postman.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional PhoneNumber phone = 3;
 * @return {?proto.jiaonidaigou.appengine.wiremodel.entity.PhoneNumber}
 */
proto.jiaonidaigou.appengine.wiremodel.entity.Postman.prototype.getPhone = function() {
  return /** @type{?proto.jiaonidaigou.appengine.wiremodel.entity.PhoneNumber} */ (
    jspb.Message.getWrapperField(this, proto.jiaonidaigou.appengine.wiremodel.entity.PhoneNumber, 3));
};


/** @param {?proto.jiaonidaigou.appengine.wiremodel.entity.PhoneNumber|undefined} value */
proto.jiaonidaigou.appengine.wiremodel.entity.Postman.prototype.setPhone = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.jiaonidaigou.appengine.wiremodel.entity.Postman.prototype.clearPhone = function() {
  this.setPhone(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.jiaonidaigou.appengine.wiremodel.entity.Postman.prototype.hasPhone = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto.jiaonidaigou.appengine.wiremodel.entity);
